{"version":3,"sources":["App.js","index.js"],"names":["rotate","keyframes","_templateObject","X","styled","span","_templateObject2","props","left","count","App","_useState","useState","_useState2","Object","slicedToArray","heartArray","setHeartArray","useEffect","heart","filter","key","undefined","setTimeout","oldArray","toConsumableArray","currentHeart","console","log","react_default","a","createElement","onClick","concat","jsx","Math","random","window","innerWidth","className","map","ReactDOM","render","src_App","document","getElementById"],"mappings":"ukBAIA,IAAMA,EAASC,YAAHC,KAUNC,EAAIC,IAAOC,KAAVC,IAEG,SAACC,GAAD,OAAWA,EAAMC,MAEZR,GAGXS,EAAQ,EAiDGC,MA/Cf,WAAe,IAAAC,EACuBC,mBAAS,IADhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACMI,EADNJ,EAAA,GAoCb,OAjCAK,oBAAU,WACR,IAAIC,EAAQH,EAAWI,OAAO,SAACD,GAAD,OAAWA,EAAME,MAAQZ,IAAO,QAChDa,IAAVH,GACFI,WAAW,WAOTN,EAAc,SAACO,GAAD,OAAAV,OAAAW,EAAA,EAAAX,CACTU,EAASJ,OAAO,SAACM,GAAD,OAAkBP,EAAME,MAAQK,EAAaL,UAEjE,OAEJ,CAACZ,IACJkB,QAAQC,IAAIZ,GAkBVa,EAAAC,EAAAC,cAAA,OAAKC,QAhBU,WACfvB,IACAQ,EAAa,GAAAgB,OAAAnB,OAAAW,EAAA,EAAAX,CACRE,GADQ,CAEX,CACEkB,IACEL,EAAAC,EAAAC,cAAC5B,EAAD,CAAGkB,IAAKZ,EAAOD,KAAM2B,KAAKC,SAAWC,OAAOC,WAAa,IACtD7B,EADH,gBAIFY,IAAKZ,OAMe8B,UAAU,OAChCV,EAAAC,EAAAC,cAAA,UAAQQ,UAAU,cAChBV,EAAAC,EAAAC,cAAA,sEAECf,EAAaA,EAAWwB,IAAI,SAACrB,GAAD,OAAWA,EAAMe,MAAO,QC3D7DO,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.722b13c4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: translateY(-1vh);\r\n  }\r\n\r\n  to {\r\n    transform:  translateY(105vh);\r\n  }\r\n`;\r\n\r\nconst X = styled.span`\r\n  top: 0px;\r\n  left: ${(props) => props.left}px;\r\n  position: absolute;\r\n  animation: ${rotate} 3s ease-in-out;\r\n`;\r\n\r\nlet count = 0;\r\n\r\nfunction App() {\r\n  const [heartArray, setHeartArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let heart = heartArray.filter((heart) => heart.key === count)[0];\r\n    if (heart !== undefined) {\r\n      setTimeout(() => {\r\n        // setHeartArray([\r\n        //   ...heartArray.filter(\r\n        //     (currentHeart) => heart.key !== currentHeart.key\r\n        //   ),\r\n        // ]); // fix this by sending in the fresh heartArray to the setHeartArray\r\n\r\n        setHeartArray((oldArray) => [\r\n          ...oldArray.filter((currentHeart) => heart.key !== currentHeart.key),\r\n        ]);\r\n      }, 2950);\r\n    }\r\n  }, [count]);\r\n  console.log(heartArray);\r\n\r\n  const addHeart = () => {\r\n    count++;\r\n    setHeartArray([\r\n      ...heartArray,\r\n      {\r\n        jsx: (\r\n          <X key={count} left={Math.random() * window.innerWidth - 50}>\r\n            {count}ðŸ’œ\r\n          </X>\r\n        ),\r\n        key: count,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div onClick={addHeart} className=\"App\">\r\n      <header className=\"App-header\">\r\n        <p>Click Anywhere Multiple Times To Make Purple Hearts Fall.</p>\r\n\r\n        {heartArray ? heartArray.map((heart) => heart.jsx) : null}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}